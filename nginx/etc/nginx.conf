worker_processes 4;

events {
    worker_connections 1024;
}

http {
    server {
        listen 80;

   	    server_name erum2018.ildiczeller.com;
   	    return 301 https://$host$request_uri;
    }

    server {
        listen 443 ssl default deferred;

        server_name erum2018.ildiczeller.com;

        ssl_certificate      /etc/nginx/ssl/fullchain.pem;
    	ssl_certificate_key  /etc/nginx/ssl/privkey.pem;
  
        # Improve HTTPS performance with session resumption
        ssl_session_cache shared:SSL:10m;
        ssl_session_timeout 5m;

        # Enable server-side protection against BEAST attacks
        ssl_prefer_server_ciphers on;
        ssl_ciphers ECDH+AESGCM:ECDH+AES256:ECDH+AES128:DH+3DES:!ADH:!AECDH:!MD5;
            
        # Disable SSLv3
        ssl_protocols TLSv1 TLSv1.1 TLSv1.2;

    	# Diffie-Hellman parameter for DHE ciphersuites
        # $ sudo openssl dhparam -out /etc/ssl/certs/dhparam.pem 4096
    	ssl_dhparam /etc/nginx/ssl/dhparam.pem;

        # Enable HSTS (https://developer.mozilla.org/en-US/docs/Security/HTTP_Strict_Transport_Security)
        # add_header Strict-Transport-Security "max-age=63072000; includeSubdomains";  

        # Enable OCSP stapling (http://blog.mozilla.org/security/2013/07/29/ocsp-stapling-in-firefox)
        ssl_stapling on;
        ssl_stapling_verify on;
        ssl_trusted_certificate /etc/nginx/ssl/fullchain.pem;
        resolver 8.8.8.8 8.8.4.4 valid=300s;
        resolver_timeout 5s;


        location ~ "^/user/(?<port>\d{5})" {
            rewrite "^/(user/\d{5})$"  /$1/ permanent;
            rewrite "^/user/\d{5}/?(.*)"  /$1 break;

            proxy_pass         http://127.0.0.1:$port;
            proxy_redirect     http://$host/ http://$host/user/$port/;
            proxy_buffering    off;
            proxy_set_header   Host $host;
            proxy_set_header   X-Real-IP $remote_addr;
            proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header   X-Forwarded-Host $server_name;
        }

        location / {
            return 200 "Please the /user/[USER ID]/ format";
        }

        location /.well-known/... {
            return 200 "...";
        }
    }
}
